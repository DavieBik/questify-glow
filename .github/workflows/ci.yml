name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  # Lint and Type Check
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Type check
        run: npx tsc --noEmit

  # Build Application
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
        env:
          # Build with test environment variables
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_ORG_ID: "00000000-0000-0000-0000-000000000001"
          VITE_ORG_NAME: "SkillBridge Test"
          VITE_ORG_SLUG: "skillbridge-test"
          VITE_ORG_CONTACT_EMAIL: "test@skillbridge.com"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # E2E Tests
  e2e-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Start test server
        run: npm run preview &
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_ORG_ID: "00000000-0000-0000-0000-000000000001"
          VITE_ORG_NAME: "SkillBridge Test"
          VITE_ORG_SLUG: "skillbridge-test"
          VITE_ORG_CONTACT_EMAIL: "test@skillbridge.com"
      
      - name: Wait for server
        run: |
          timeout 60 bash -c 'until curl -s http://localhost:4173 > /dev/null; do sleep 1; done'
      
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:4173
          TEST_ADMIN_EMAIL: ${{ secrets.TEST_ADMIN_EMAIL }}
          TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}
          TEST_LEARNER_EMAIL: ${{ secrets.TEST_LEARNER_EMAIL }}
          TEST_LEARNER_PASSWORD: ${{ secrets.TEST_LEARNER_PASSWORD }}
          CI: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 14
      
      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots
          path: test-results/
          retention-days: 14

  # Security Scan (Optional)
  security:
    runs-on: ubuntu-latest
    needs: lint
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
      
      - name: Run security scan
        run: |
          npx audit-ci --moderate
        continue-on-error: true

  # Deployment (when tests pass)
  deploy:
    runs-on: ubuntu-latest
    needs: [build, e2e-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy to production
        run: |
          echo "ðŸš€ Deploying to production..."
          echo "All tests passed, ready for deployment"
          # Add your deployment steps here
          # e.g., deploy to Vercel, Netlify, AWS, etc.
